# Function which pushes all 
# zeros to end of an array. 
Given an array of random numbers, Push all the zeroâ€™s of a given array to the end of the array. For example, 
if the given arrays is {1, 9, 8, 4, 0, 0, 2, 7, 0, 6, 0}, it should be changed to {1, 9, 8, 4, 2, 7, 6, 0, 0, 0, 0}. 
The order of all other elements should be same. Expected time complexity is O(n) and extra space is O(1).

Example:

Input :  arr[] = {1, 2, 0, 4, 3, 0, 5, 0};
Output : arr[] = {1, 2, 4, 3, 5, 0, 0};

Input : arr[]  = {1, 2, 0, 0, 0, 3, 6};
Output : arr[] = {1, 2, 3, 6, 0, 0, 0};



def pushZerosToEnd(arr): 
    count = 0 # Count of non-zero elements 
    n=len(arr)
    # Traverse the array. If element  
    # encountered is non-zero, then 
    # replace the element at index 
    # 'count' with this element 
    for i in range(n): 
        if arr[i] != 0: 
              
            # here count is incremented 
            arr[count] = arr[i] 
            count+=1
      
    # Now all non-zero elements have been 
    # shifted to front and 'count' is set 
    # as index of first 0. Make all  
    # elements 0 from count to end. 
    for i in range(count,len(arr)):
        arr[i]=0
    return arr
print(pushZerosToEnd([1,0,2,0,3]))  
# [1,2,3,0,0]

# 
